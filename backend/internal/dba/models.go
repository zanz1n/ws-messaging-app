// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package dba

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type UserRole string

const (
	UserRoleADMIN UserRole = "ADMIN"
	UserRoleUSER  UserRole = "USER"
)

func (e *UserRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserRole(s)
	case string:
		*e = UserRole(s)
	default:
		return fmt.Errorf("unsupported scan type for UserRole: %T", src)
	}
	return nil
}

type NullUserRole struct {
	UserRole UserRole
	Valid    bool // Valid is true if UserRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserRole) Scan(value interface{}) error {
	if value == nil {
		ns.UserRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserRole), nil
}

type Message struct {
	ID        string
	CreatedAt time.Time
	UpdatedAt time.Time
	Content   sql.NullString
	ImageUrl  sql.NullString
	UserId    string
}

type User struct {
	ID        string
	CreatedAt time.Time
	UpdatedAt time.Time
	Role      UserRole
	Username  string
	Password  string
}
